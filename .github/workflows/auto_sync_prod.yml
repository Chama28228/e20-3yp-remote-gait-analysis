name: Sync to Prod

on:
  push:
    branches:
      - main

jobs:
  sync-prod:
    name: Sync Deploy Folders to Prod
    runs-on: ubuntu-latest

    steps:
    - name: ‚¨áÔ∏è Checkout main branch
      uses: actions/checkout@v4
      with:
        ref: main
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: üì¶ Copy deploy folders to temp branch
      id: sync-prod
      run: |
        BRANCH=auto-sync-prod-$(date +%Y%m%d-%H%M%S)
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

        # Create new branch from prod
        git fetch origin prod
        git checkout -b $BRANCH origin/prod

        # ‚ö†Ô∏è Remove everything except .ci and .git
        find . -mindepth 1 -maxdepth 1 ! -name '.git' ! -name '.ci' -exec rm -rf {} +

        # Restore only selected deploy folders from main
        git checkout main -- \
          gait-analysis-backend \
          gait-analysis-frontend \
          gait-processing-service

        git add .
        if git diff --cached --quiet; then
          echo "‚úÖ No changes to commit. Exiting gracefully."
          exit 0
        fi
        git commit -m "üîÑ Auto-sync deploy folders from main"
        git push origin $BRANCH


        echo "branch=$BRANCH" >> $GITHUB_OUTPUT


    - name: üîÄ Open PR to prod
      uses: repo-sync/pull-request@v2
      with:
        source_branch: ${{ steps.sync-prod.outputs.branch }}
        destination_branch: prod
        pr_title: "üîÑ Auto-sync deploy folders from main"
        pr_body: |
          Automated PR to sync deployment folders (`gait-analysis-backend`, `frontend`, `processing-service`) from `main` to `prod`.
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: üõ†Ô∏è Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

    - name: üìß Send notification via SES template
      run: |
        echo "üìß Sending notification email using SES template..."
        
        # Prepare timestamp in Sri Lanka time (Asia/Colombo) - 12 hour format
        TIMESTAMP=$(TZ='Asia/Colombo' date '+%Y-%m-%d %I:%M:%S %p SLST')
        
        # Send email using SES template
        aws ses send-templated-email \
          --source "RehabGait CI <${{ secrets.FROM_EMAIL }}>" \
          --destination "ToAddresses=yohansenanayake4321@gmail.com,member2@example.com,member3@example.com,member4@example.com" \
          --template "RehabGaitSyncNotification" \
          --template-data "{
            \"branch_name\": \"${{ steps.sync-prod.outputs.branch }}\",
            \"repo_name\": \"${{ github.repository }}\",
            \"triggered_by\": \"${{ github.actor }}\",
            \"timestamp\": \"$TIMESTAMP\",
            \"pr_url\": \"https://github.com/${{ github.repository }}/pull/${{ steps.create-pr.outputs.pr_number }}\",
            \"repo_url\": \"https://github.com/${{ github.repository }}\"
          }" \
          --region us-east-1
        
        echo "‚úÖ Email notification sent successfully!"
        echo "üì¨ Email sent to team members about PR #${{ steps.create-pr.outputs.pr_number }}"




    # - name: üìß Notify team about new sync PR
    #   uses: dawidd6/action-send-mail@v3
    #   with:
    #     server_address: ${{ secrets.SMTP_SERVER }}
    #     server_port: ${{ secrets.SMTP_PORT }}
    #     username: ${{ secrets.SMTP_USERNAME }}
    #     password: ${{ secrets.SMTP_PASSWORD }}
    #     subject: "üîÑ New PR: Sync Main ‚Üí Prod"
    #     from: "RehabGait CI <${{ secrets.FROM_EMAIL }}>"
    #     to: |
    #       yohansenanayake4321@gmail.com
    #     body: |
    #       A new pull request has been created to sync selected deployment folders from `main` to `prod`.

    #       ‚û§ Branch: ${{ steps.sync-prod.outputs.branch }}
    #       ‚û§ Repository: https://github.com/${{ github.repository }}
    #       ‚û§ Pull Requests: https://github.com/${{ github.repository }}/pulls

    #       üõ°Ô∏è This is an automated message from the RehabGait CI system.
